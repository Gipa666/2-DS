let leftPaddle;
let rightPaddle;
let ball;

function setup() {
    createCanvas(800, 600);
    
    leftPaddle = new Paddle(50, height / 2 - 50);
    rightPaddle = new Paddle(width - 60, height / 2 - 50);
    ball = new Ball();
}

function draw() {
    background(0);
    
    leftPaddle.show();
    leftPaddle.update();
    
    rightPaddle.show();
    rightPaddle.update();
    
    ball.show();
    ball.update(leftPaddle, rightPaddle);
}

function keyPressed() {
    if (key === 'W') {
        leftPaddle.move(-10);
    } else if (key === 'S') {
        leftPaddle.move(10);
    }
    
    if (keyCode === UP_ARROW) {
        rightPaddle.move(-10);
    } else if (keyCode === DOWN_ARROW) {
        rightPaddle.move(10);
    }
}

class Paddle {
    constructor(x, y) {
        this.x = x;
        this.y = y;
        this.width = 10;
        this.height = 100;
    }

    show() {
        fill(255);
        rect(this.x, this.y, this.width, this.height);
    }

    update() {
        this.y = constrain(this.y, 0, height - this.height);
    }

    move(step) {
        this.y += step;
    }
}

class Ball {
    constructor() {
        this.x = width / 2;
        this.y = height / 2;
        this.size = 20;
        this.xSpeed = 5;
        this.ySpeed = 5;
    }

    show() {
        fill(255);
        ellipse(this.x, this.y, this.size);
    }

    update(leftPaddle, rightPaddle) {
        this.x += this.xSpeed;
        this.y += this.ySpeed;

        if (this.y <= 0 || this.y >= height) {
            this.ySpeed *= -1; // Inverte a direção
        }

        // Colisão com paddles
        if (this.x <= leftPaddle.x + leftPaddle.width && this.y > leftPaddle.y && this.y < leftPaddle.y + leftPaddle.height) {
            this.xSpeed *= -1;
        }
        if (this.x >= rightPaddle.x - this.size && this.y > rightPaddle.y && this.y < rightPaddle.y + rightPaddle.height) {
            this.xSpeed *= -1;
        }

        // Reseta a bola se sair da tela
        if (this.x < 0 || this.x > width) {
            this.x = width / 2;
            this.y = height / 2;
            this.xSpeed = random(5, 7) * (random() > 0.5 ? 1 : -1); // Reseta a velocidade
            this.ySpeed = random(5, 7) * (random() > 0.5 ? 1 : -1);
        }
    }
}
